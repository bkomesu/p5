{"version":3,"sources":["chartConfigs/chatrConfigs.js","Components/HistoryChart.js","Components/CoinData.js","apis/coinGecko.js","pages/CoinDetailPage.js","context/watchListContext.js","Components/AddCoin.js","Components/Coin.js","Components/Coinlist.js","pages/CoinSummaryPage.js","Components/Header.js","App.js","index.js"],"names":["historyOptions","lineHeightAnnotation","always","hover","lineWeight","animation","duration","maintainAspectRatio","responsive","options","scales","x","type","distribution","HistoryChart","data","chartRef","useRef","day","week","year","detail","useState","timeFormat","setTimeFormat","determineTimeFormat","chartInstance","undefined","useEffect","current","Chart","datasets","label","name","backgroundColor","borderColor","pointRadius","className","current_price","toFixed","price_change_24h","price_change_percentage_24h","renderPrice","ref","id","width","height","onClick","destroy","CoinData","market_cap","total_supply","total_volume","high_24h","circulating_supply","low_24h","renderData","axios","create","baseURL","CoinDetailPage","useParams","coinData","setCoinData","isLoading","setIsLoading","dateConverter","unix","date","Date","months","getMonth","getDate","getHours","getMinutes","substr","formatData","map","el","y","fetchData","a","Promise","all","coinGecko","get","params","vs_currency","days","ids","prices","WatchListContext","createContext","WatchListContextProvider","props","console","log","localStorage","getItem","split","watchList","setWatchList","setItem","Provider","value","deleteCoin","coin","filter","AddCoin","indexOf","children","isActive","setIsActive","useContext","href","Coin","to","src","image","alt","e","preventDefault","CoinList","coins","setCoins","join","response","length","CoinSummaryPage","Header","App","exact","path","element","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.09bc8689.chunk.js","sourcesContent":["export const historyOptions = {\r\n  lineHeightAnnotation: {\r\n    always: true,\r\n    hover: false,\r\n    lineWeight: 1.5,\r\n  },\r\n\r\n  animation: {\r\n    duration: 2000,\r\n  },\r\n  maintainAspectRatio: false,\r\n  responsive: true,\r\n\r\n  options: {\r\n    scales: {\r\n      x: {\r\n        type: \"time\",\r\n        distribution: \"linear\",\r\n      },\r\n    },\r\n  },\r\n};\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport Chart from \"chart.js/auto\";\r\nimport { historyOptions } from \"../chartConfigs/chatrConfigs\";\r\n\r\nconst HistoryChart = ({ data }) => {\r\n  const chartRef = useRef();\r\n  const { day, week, year, detail } = data;\r\n  const [timeFormat, setTimeFormat] = useState(\"24h\");\r\n\r\n  const determineTimeFormat = () => {\r\n    switch (timeFormat) {\r\n      case \"24\":\r\n        return day;\r\n      case \"7d\":\r\n        return week;\r\n      case \"1y\":\r\n        return year;\r\n      default:\r\n        return day;\r\n    }\r\n  };\r\n\r\n  let chartInstance = undefined;\r\n  useEffect(() => {\r\n    if (chartRef && chartRef.current && detail) {\r\n      chartInstance = new Chart(chartRef.current, {\r\n        type: \"line\",\r\n        data: {\r\n          datasets: [\r\n            {\r\n              label: `${detail.name} price`,\r\n              data: determineTimeFormat(),\r\n              backgroundColor: \"rgba(174,305,194,0.5)\",\r\n              borderColor: \"rgba(174, 305,194,0.4\",\r\n              pointRadius: 0,\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          ...historyOptions,\r\n        },\r\n      });\r\n    }\r\n  });\r\n\r\n  const renderPrice = () => {\r\n    if (detail) {\r\n      return (\r\n        <>\r\n          <p className=\"my-0\">\r\n            Current Value: ${detail.current_price.toFixed(2)}\r\n          </p>\r\n          <p\r\n            className={\r\n              detail.price_change_24h < 0\r\n                ? \"text-danger my-0\"\r\n                : \"text-success my-0\"\r\n            }\r\n          >\r\n            Percentage Change: {detail.price_change_percentage_24h.toFixed(2)}\r\n            {\"%\"}\r\n          </p>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white border mt-2 rounded p-3\">\r\n      <div>{renderPrice()}</div>\r\n      <div>\r\n        <canvas ref={chartRef} id=\"myChart\" width={250} height={250}></canvas>\r\n      </div>\r\n\r\n      <div className=\"chart-button mt-1\">\r\n        <button\r\n          onClick={() => {\r\n            chartInstance.destroy();\r\n            setTimeFormat(\"24h\");\r\n          }}\r\n          className=\"btn btn-outline-secondary btn-sm\"\r\n        >\r\n          {\" \"}\r\n          24h{\" \"}\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            chartInstance.destroy();\r\n            setTimeFormat(\"7d\");\r\n          }}\r\n          className=\"btn btn-outline-secondary btn-sm mx-1\"\r\n        >\r\n          {\" \"}\r\n          7d{\" \"}\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            chartInstance.destroy();\r\n            setTimeFormat(\"1y\");\r\n          }}\r\n          className=\"btn btn-outline-secondary btn-sm\"\r\n        >\r\n          {\" \"}\r\n          1y{\" \"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryChart;\r\n","import React from \"react\";\r\n\r\nconst CoinData = ({ data }) => {\r\n  const renderData = () => {\r\n    if (data) {\r\n      return (\r\n        <div className=\"bg-white mt-3 p-2 rounded border row\">\r\n          <div className=\"col-sm\">\r\n            <div className=\"d-flex flex-column\">\r\n              <span className=\"text-muted coin-data-category\">Market Cap</span>\r\n              <span>{data.market_cap}</span>\r\n            </div>\r\n            <hr />\r\n            <div className=\"d-flex flex-column\">\r\n              <span className=\"text-muted coin-data-category\">\r\n                Total Supply{\" \"}\r\n              </span>\r\n              <span>{data.total_supply}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm\">\r\n            <div className=\"d-flex flex-column\">\r\n              <span className=\"text-muted coin-data-category\">Volume(24H)</span>\r\n              <span>{data.total_volume}</span>\r\n            </div>\r\n            <hr />\r\n            <div className=\"d-flex flex-column\">\r\n              <span className=\"text-muted coin-data-category\">High 24h </span>\r\n              <span>{data.high_24h}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm\">\r\n            <div className=\"d-flex flex-column\">\r\n              <span className=\"text-muted coin-data-category\">\r\n                Circulating Supply\r\n              </span>\r\n              <span>{data.circulating_supply}</span>\r\n            </div>\r\n            <hr />\r\n            <div className=\"d-flex flex-column\">\r\n              <span className=\"text-muted coin-data-category\">Low 24h </span>\r\n              <span>{data.low_24h}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return <div>{renderData()}</div>;\r\n};\r\n\r\nexport default CoinData;\r\n","import axios from \"axios\" \r\n\r\nexport default axios.create({\r\n    baseURL: \"https://api.coingecko.com/api/v3\"\r\n});","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport HistoryChart from \"../Components/HistoryChart\";\r\nimport CoinData from \"../Components/CoinData\";\r\nimport coinGecko from \"../apis/coinGecko\";\r\n\r\nconst CoinDetailPage = () => {\r\n  const { id } = useParams();\r\n  const [coinData, setCoinData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const dateConverter = (unix) => {\r\n    let date = new Date(unix);\r\n    let months = date.getMonth();\r\n    let day = date.getDate();\r\n    let hours = date.getHours();\r\n    let minutes = \"0\" + date.getMinutes();\r\n    let formattedTime =\r\n      day + \"-\" + months + \"_\" + hours + \":\" + minutes.substr(-2);\r\n    return formattedTime;\r\n  };\r\n\r\n  const formatData = (data) => {\r\n    return data.map((el) => {\r\n      return {\r\n        x: dateConverter(el[0]),\r\n        y: el[1].toFixed(2),\r\n      };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      const [day, week, year, detail] = await Promise.all([\r\n        coinGecko.get(`/coins/${id}/market_chart/`, {\r\n          params: {\r\n            vs_currency: \"usd\",\r\n            days: \"1\",\r\n          },\r\n        }),\r\n\r\n        coinGecko.get(`/coins/${id}/market_chart/`, {\r\n          params: {\r\n            vs_currency: \"usd\",\r\n            days: \"7\",\r\n          },\r\n        }),\r\n\r\n        coinGecko.get(`/coins/${id}/market_chart/`, {\r\n          params: {\r\n            vs_currency: \"usd\",\r\n            days: \"365\",\r\n          },\r\n        }),\r\n\r\n        coinGecko.get(\"/coins/markets/\", {\r\n          params: {\r\n            vs_currency: \"usd\",\r\n            ids: id,\r\n          },\r\n        }),\r\n      ]);\r\n\r\n      setCoinData({\r\n        day: formatData(day.data.prices),\r\n        week: formatData(week.data.prices),\r\n        year: formatData(year.data.prices),\r\n        detail: detail.data[0],\r\n      });\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const renderData = () => {\r\n    if (isLoading) {\r\n      return <div>Loading...</div>;\r\n    }\r\n    return (\r\n      <div className=\"coinlist\">\r\n        <HistoryChart data={coinData} />\r\n        <CoinData data={coinData.detail} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return renderData();\r\n};\r\n\r\nexport default CoinDetailPage;\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const WatchListContext = createContext();\r\n\r\nexport const WatchListContextProvider = (props) => {\r\n  console.log();\r\n  const [watchList, setWatchList] = useState(\r\n    localStorage.getItem(\"watchList\").split(\",\") || [\r\n      \"bitcoin\",\r\n      \"ethereum\",\r\n      \"ripple\",\r\n      \"litecoin\",\r\n    ]\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"watchList\", watchList);\r\n  }, [watchList]);\r\n\r\n  const AddCoin = (coin) => {\r\n    if (watchList.indexOf(coin) === -1) {\r\n      setWatchList([...watchList, coin]);\r\n    }\r\n  };\r\n\r\n  const deleteCoin = (coin) => {\r\n    setWatchList(\r\n      watchList.filter((el) => {\r\n        return el !== coin;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <WatchListContext.Provider value={{ watchList, deleteCoin, AddCoin }}>\r\n      {props.children}\r\n    </WatchListContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { WatchListContext } from \"../context/watchListContext\";\r\n\r\nconst AddCoin = () => {\r\n  const [isActive, setIsActive] = useState(false);\r\n  const { AddCoin } = useContext(WatchListContext);\r\n\r\n  const avaliableCoins = [\r\n    \"bitcoin\",\r\n    \"ethereum\",\r\n    \"ripple\",\r\n    \"tether\",\r\n    \"bitcoin-cash\",\r\n    \"litecoin\",\r\n    \"eos\",\r\n    \"okb\",\r\n    \"tezos\",\r\n    \"cardano\",\r\n  ];\r\n\r\n  const handleClick = (coin) => {\r\n    AddCoin(coin);\r\n    setIsActive(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <button\r\n        onClick={() => setIsActive(!isActive)}\r\n        className=\"btn btn-primary dropdown-toggle\"\r\n        type=\"button\"\r\n      >\r\n        {\" \"}\r\n        Add Coin\r\n      </button>\r\n\r\n      <div className={isActive ? \"dropdown-menu show\" : \"dropdown-menu\"}>\r\n        {avaliableCoins.map((el) => {\r\n          return (\r\n            <a\r\n              onClick={() => handleClick(el)}\r\n              href=\"#\"\r\n              className=\"dropdown-item\"\r\n            >\r\n              {el}\r\n            </a>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCoin;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Coin = ({ coin, deleteCoin }) => {\r\n  return (\r\n    <Link to={`/coins/${coin.id}`} className=\"text-decoration-none my-1 coin\">\r\n      <li className=\"coinlist-item list-group-item list-group-item-action d-flex justify-content-between align-items-center text-dark\">\r\n        <img className=\"coinlist-image\" src={coin.image} alt=\"\" />\r\n        <span className=\"text-decoration-none\">\r\n          {\" \"}\r\n          Price: ${coin.current_price}{\" \"}\r\n        </span>\r\n\r\n        <span\r\n          className={\r\n            coin.price_change_percentage_24h < 0\r\n              ? \"text-danger mr-2\"\r\n              : \"text-success mr-2\"\r\n          }\r\n        >\r\n          24HR Change{\" \"}\r\n          {coin.price_change_percentage_24h < 0 ? (\r\n            <i className=\"fa fa-sort-down align-middle mr-1\"></i>\r\n          ) : (\r\n            <i className=\"fa fa-sort-up align-middle mr-1\"></i>\r\n          )}\r\n          {coin.price_change_percentage_24h}%\r\n        </span>\r\n        <i\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            deleteCoin(coin.id);\r\n          }}\r\n          className=\"delete-icon fa fa-times-circle text-danger\"\r\n        ></i>\r\n      </li>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Coin;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport coinGecko from \"../apis/coinGecko\";\r\nimport { WatchListContext } from \"../context/watchListContext\";\r\nimport Coin from \"./Coin\";\r\n\r\nconst CoinList = () => {\r\n    const [coins, setCoins] = useState([]);\r\n    const {watchList, deleteCoin} = useContext(WatchListContext)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    console.log(watchList);\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setIsLoading(true)\r\n            const response = await coinGecko.get(\"/coins/markets/\", {\r\n                params: {\r\n                    vs_currency: \"usd\",\r\n                    ids: watchList.join(\",\"),\r\n                },\r\n            });\r\n            setCoins(response.data);\r\n            setIsLoading(false);\r\n        };\r\n\r\n        if (watchList.length > 0) {\r\n            fetchData();\r\n        } else setCoins([]);\r\n        }, [watchList]);\r\n\r\n    const renderCoins = () => {\r\n        if(isLoading) {\r\n            return <div>Loading...</div>    \r\n        }\r\n        \r\n        return (\r\n            <ul className=\"coinlist list-group mt-2\">\r\n                {coins.map((coin) => {\r\n                    return <Coin key={coin.id} coin={coin} deleteCoin={deleteCoin} />;\r\n                })}\r\n            </ul>\r\n        );\r\n    };\r\n\r\n\r\n    return <div>{renderCoins()}</div>;\r\n};\r\n\r\nexport default CoinList;","import React from \"react\";\r\nimport AddCoin from \"../Components/AddCoin\";\r\nimport CoinList from \"../Components/Coinlist\";\r\n\r\nconst CoinSummaryPage = () => {\r\n    return (\r\n        <div className=\"coinsummary shadow border p-2 rounded mt-2 bg-light\">\r\n            <AddCoin/>\r\n            <CoinList />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoinSummaryPage","import React from \"react\"; \r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-center text-danger mt-3 mb-4\">Crypto_Watch</h1>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport CoinDetailPage from \"./pages/CoinDetailPage\";\r\nimport CoinSummaryPage from \"./pages/CoinSummaryPage\";\r\nimport Header from \"./Components/Header\";\r\nimport \"./App.css\";\r\nimport { WatchListContextProvider } from \"./context/watchListContext\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <WatchListContextProvider>\r\n        <BrowserRouter>\r\n          <Header />\r\n          <Routes>\r\n            <Route exact path=\"/\" element={<CoinSummaryPage />} />\r\n            <Route exact path=\"/coins/:id\" element={<CoinDetailPage />} />\r\n          </Routes>\r\n        </BrowserRouter>\r\n      </WatchListContextProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App  from \"./App\";\r\n\r\n\r\n\r\nReactDom.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}